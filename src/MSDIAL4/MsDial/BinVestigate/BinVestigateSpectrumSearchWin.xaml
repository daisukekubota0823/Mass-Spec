<Window x:Class="Rfx.Riken.OsakaUniv.BinVestigateSpectrumSearchWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:massSpectrogram="clr-namespace:Rfx.Riken.OsakaUniv;assembly=MassSpectrogram"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Rfx.Riken.OsakaUniv;assembly=CommonMVVM"
        Title="BinVestigate spectrum search"
        Name="BinVestigateSpectrumSearchView"
        Height="720" Width="1280">


    <!--interaction trigers-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction
                    Command="{Binding WindowLoaded}"
                    CommandParameter="{Binding ElementName=BinVestigateSpectrumSearchView}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--interaction Behaviors-->
    <i:Interaction.Behaviors>
        <local:ValidationBehavior HasViewError="{Binding HasViewError, Mode=OneWayToSource}" />
    </i:Interaction.Behaviors>

    <!--Window resources-->
    <Window.Resources>
        <ControlTemplate x:Key="InputErrorTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ContextMenu x:Key="menuReverseMassSpectrogram">
            <MenuItem Header="Save image as.." Click="contextMenu_SaveImageAs_Click" />
            <MenuItem Header="Copy image as.." Click="contextMenu_CopyImageAs_Click" />
        </ContextMenu>
    </Window.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">

            <Grid.RowDefinitions>
                <RowDefinition Height="80" />
                <RowDefinition Height="90" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Label Content="1. To search by similarity, enter RI tolerance and threshold. Then, click 'send' for searching BinVestigate." 
                   Grid.Row="0" HorizontalAlignment="Left" Margin="5,5,0,0" />

            <Button Name="Button_SpectrumSearch" Content="Send" 
                    Grid.Row="0" Width="75" Height="25" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,30,0,0"
                    Command="{Binding SearchSpectrum}" CommandParameter="{Binding ElementName=BinVestigateSpectrumSearchView}"/>
           
            <Label Content="RI: " 
                   Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="100,30,0,0" />

            <TextBox Name="TextBox_RetentionIndex" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                     Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" 
                     VerticalContentAlignment="Center" Width="70" Height="25" Margin="125,30,0,0">
                <TextBox.Text>
                    <Binding Path="RetentionIndex" ValidatesOnDataErrors="True" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <local:PositiveDoubleNumericValidation />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>


            <Label Content="RI tolerance:  +/-" 
                   Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="215,30,0,0" />

            <TextBox Name="TextBox_RiTolerance" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                     Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" 
                     VerticalContentAlignment="Center" Width="70" Height="25" Margin="315,30,0,0">
                <TextBox.Text>
                    <Binding Path="RiTolerance" ValidatesOnDataErrors="True" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <local:PositiveDoubleNumericValidation />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Label Content="Similarity threshold (%): " 
                   Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="400,30,0,0" />

            <TextBox Name="TextBox_Threshold" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                     Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" 
                     Width="70" Height="25" Margin="540,30,0,0">
                <TextBox.Text>
                    <Binding Path="Threshold" ValidatesOnDataErrors="True" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <local:PositiveDoubleNumericValidation />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Label Content="Focused spectrum information" FontStyle="Italic" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0" />
            
            <DataGrid Name="DataGrid_ForcusedSpectrumInformation" Grid.Row="1" Height="50" 
                      ItemsSource="{Binding Path=Ms1DecResults}"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" SelectionUnit="FullRow" 
                      IsReadOnly="False" HeadersVisibility="All" AutoGenerateColumns="False" Margin="10,30,10,10">
              
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader" >
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                
                <DataGrid.Columns>
                    <DataGridTextColumn Header="MS1Dec ID" Width="*" Binding="{Binding Path=Ms1DecID}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Annotation" Width="*" Binding="{Binding Path=MetaboliteName}" IsReadOnly="True" />
                    <DataGridTextColumn Header="RT[min]" Width="*" Binding="{Binding Path=RetentionTime}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Retention index" Width="*" Binding="{Binding Path=RetentionIndex}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Quant mass" Width="*" Binding="{Binding Path=BasepeakMz}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Intensity" Width="*" Binding="{Binding Path=BasepeakHeight}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>

            <Label Content="2. Select a BinBase ID, and click 'browse' for generating the statistics in BinBase database." 
                   Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,10,0,0" />

            <Button Name="Button_BrowseStatistics" Content="Browse" 
                    Grid.Row="2" Width="75" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,45,0,0"
                    Command="{Binding BrowseStatistics}" CommandParameter="{Binding ElementName=BinVestigateSpectrumSearchView}"/>

            <DataGrid Name="DataGrid_LibraryInformation" Grid.Row="2" 
                      ItemsSource="{Binding Path=BinBaseSpectrumRecords, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
                      SelectedItem="{Binding Path=SelectedBinBaseSpectrum}" 
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True" 
                      SelectionUnit="FullRow" IsReadOnly="False" HeadersVisibility="All" AutoGenerateColumns="False" 
                      Margin="10,80,10,10">
                
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader" >
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Bin ID" Width="*" Binding="{Binding Path=id}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Path=name}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Fiehn RI" Width="*" Binding="{Binding Path=retentionIndex, StringFormat=0.00}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Kovats RI" Width="*" Binding="{Binding Path=kovats, StringFormat=0.00}" IsReadOnly="True" />
                    <DataGridTextColumn Header="InChIKey" Width="*" Binding="{Binding Path=inchikey, StringFormat=0.00}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Similarity" Width="*" Binding="{Binding Path=BinVestigateSearchSimilarity, StringFormat=0.00}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
       
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="180" />
                <RowDefinition Height="3*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical" Grid.Column="0" Margin="5,10,0,0">
                    <Label Content="Name:" Height="25"/>
                    <Label Content="Similarity: " Height="25"/>
                    <Label Content="Purity in BinBase: " Height="25"/>
                    <Label Content="InChIKey: " Height="25"/>
                    <Label Content="SPLASH: " Height="25"/>
                    <Label Content="BinVestigate link: " Height="25"/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1" Margin="5,10,0,0">
                    <Label Name="Label_Name" Content="" Height="25"/>
                    <Label Name="Label_Similarity" Content="" Height="25"/>
                    <Label Name="Label_Purity" Content="" Height="25"/>
                    <Label Name="Label_InChIKey" Content="" Height="25"/>
                    <Label Name="Label_Splash" Content="" Height="25"/>
                    <Label Name="Label_BinVestigateLink" Height="25">
                        <Hyperlink NavigateUri="{Binding BinvestigateLink, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                   RequestNavigate="GotoBinvestigate">
                            <Hyperlink.Inlines>
                                <Run Text="{Binding BinvestigateLink, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
                            </Hyperlink.Inlines>
                        </Hyperlink>
                    </Label>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1">
                <massSpectrogram:MassSpectrogramWithReferenceUI Name="SpectrumUI" ContextMenu="{DynamicResource ResourceKey=menuReverseMassSpectrogram}" />
            </Grid>
        </Grid>



    </Grid>
</Window>
