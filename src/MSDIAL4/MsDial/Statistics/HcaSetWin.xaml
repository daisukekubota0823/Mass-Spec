<Window x:Class="Rfx.Riken.OsakaUniv.HcaSetWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:CommonMVVM="clr-namespace:Rfx.Riken.OsakaUniv;assembly=CommonMVVM"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Rfx.Riken.OsakaUniv"
        mc:Ignorable="d"
        Loaded="Window_Loaded"
        Title="HCA Setting" Height="250" Width="400">
    <i:Interaction.Behaviors>
        <CommonMVVM:ValidationBehavior HasViewError="{Binding HasViewError, Mode=OneWayToSource}" />
    </i:Interaction.Behaviors>
    <Window.Resources>

        <local:ScaleEnumToIntConverter x:Key="scaleEnumToInt" />

        <local:TransformEnumToIntConverter x:Key="transformEnumToInt" />
        
        <ControlTemplate x:Key="InputErrorTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label
                Content="Transform method:"
                VerticalAlignment="Center"
                Grid.Column="0"
                Margin="5,5,5,5"/>
            <ComboBox
                Name="ComboBox_TransformMethod"
                Margin="5,5,5,5" 
                Grid.Column="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Path=TransformMethod}"
                SelectedIndex="{Binding Path=Transform, Converter={StaticResource ResourceKey=transformEnumToInt}, Mode=TwoWay}"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label
                Content="Scale method:"
                VerticalAlignment="Center"
                Grid.Column="0"
                Margin="5,5,5,5"/>
            <ComboBox
                Name="ComboBox_ScaleMethod"
                Margin="5,5,5,5"
                Grid.Column="1"
                VerticalAlignment="Center"
                ItemsSource="{Binding Path=ScaleMethod}"
                SelectedIndex="{Binding Path=Scale, Converter={StaticResource ResourceKey=scaleEnumToInt}, Mode=TwoWay}"/>
        </Grid>
        <StackPanel Grid.Row="2">
            <Label Content="Metabolite selection" FontStyle="Italic" Grid.Row="0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <CheckBox
                    Name="CheckBox_IsIdentified"
                    Content="Ref. matched"
                    Margin="5"
                    IsChecked="{Binding IsIdentifiedImportedInStatistics}"/>
                <CheckBox
                    Name="CheckBox_IsAnnotated"
                    Content="Suggested"
                    Margin="5"
                    IsChecked="{Binding IsAnnotatedImportedInStatistics}"/>
                <CheckBox
                    Content="Unknown"
                    Margin="5"
                    IsChecked="{Binding IsUnknownImportedInStatistics}"/>
            </StackPanel>
        </StackPanel>
        <Button
            Name="Button_Finish" Content="Done"
            Margin="5,5,5,5"
            Grid.Row="3" Height="25" Width="70"
            HorizontalAlignment="Right"
            Command="{Binding OkCommand}" />
    </Grid>
</Window>
