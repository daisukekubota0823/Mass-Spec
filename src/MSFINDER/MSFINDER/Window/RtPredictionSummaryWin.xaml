<Window x:Class="Rfx.Riken.OsakaUniv.RtPredictionSummaryWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Rfx.Riken.OsakaUniv;assembly=CommonMVVM"
        xmlns:pairwiseplot="clr-namespace:Rfx.Riken.OsakaUniv;assembly=PairwisePlot"
        Title="RT prediction result" 
        Name="RtPredictionResultView"
        Height="720" Width="1280">

    <!--interaction trigers-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction
                    Command="{Binding WindowLoaded}"
                    CommandParameter="{Binding ElementName=RtPredictionResultView}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!--interaction Behaviors-->
    <i:Interaction.Behaviors>
        <local:ValidationBehavior HasViewError="{Binding HasViewError, Mode=OneWayToSource}" />
    </i:Interaction.Behaviors>

    <!--Window resources-->
    <Window.Resources>
        <ControlTemplate x:Key="InputErrorTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">

            <Button Name="Button_ReflectResult" Content="Reflect" 
                    Width="75" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0"
                    Command="{Binding ReflectResult}" CommandParameter="{Binding ElementName=RtPredictionResultView}"/>

            <Button Name="Button_Cancel" Content="Cancel" 
                    Width="75" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="95,10,0,0"
                    Command="{Binding Cancel}" CommandParameter="{Binding ElementName=RtPredictionResultView}"/>

            <DataGrid Name="DataGrid_PredictionDetail" 
                      ItemsSource="{Binding Path=RtStructureQueries, 
                                    NotifyOnSourceUpdated=True, 
                                    NotifyOnTargetUpdated=True, 
                                    UpdateSourceTrigger=PropertyChanged}" 
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True" 
                      SelectionUnit="FullRow" IsReadOnly="False" HeadersVisibility="All" AutoGenerateColumns="False" 
                      Margin="10,45,10,10">

                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader" >
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Width="80" Binding="{Binding Path=Name}" IsReadOnly="True" />
                    <DataGridTextColumn Header="SMILES" Width="*" Binding="{Binding Path=Structure.Smiles}" IsReadOnly="True" />
                    <DataGridTextColumn Header="XLogP" Width="80" Binding="{Binding Path=Structure.XlogP, StringFormat=0.00}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Exp. RT" Width="80" Binding="{Binding Path=ExperimentRt, StringFormat=0.00}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Pred. RT" Width="80" Binding="{Binding Path=PredictedRt, StringFormat=0.00}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Grid.Column="1">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="120" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical" Grid.Column="0" Margin="5,10,0,0">
                    <Label Content="Equation:" Height="25"/>
                    <Label Content="R-squared: " Height="25"/>
                    <Label Content="RT error Max (min): " Height="25"/>
                    <Label Content="RT error Min (min): " Height="25"/>
                </StackPanel>

                <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1" Margin="5,10,0,0">
                    <Label Name="Label_Equation" Content="" Height="25"/>
                    <Label Name="Label_Rsquared" Content="" Height="25"/>
                    <Label Name="Label_RtErrorMax" Content="" Height="25"/>
                    <Label Name="Label_RtErrorMin" Content="" Height="25"/>
                </StackPanel>

            </Grid>

            <Grid Grid.Row="1">
                <pairwiseplot:PairwisePlotUI Name="PairwiseUI" />
            </Grid>
            
        </Grid>
    </Grid>
</Window>
