<Window x:Class="Rfx.Riken.OsakaUniv.CreateSpectrumFileWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:common="clr-namespace:Rfx.Riken.OsakaUniv;assembly=Common"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Rfx.Riken.OsakaUniv;assembly=CommonMVVM"
        Loaded="Window_Loaded"
        Title="Create a query..." Height="832" Width="624">

    <i:Interaction.Behaviors>
        <local:ValidationBehavior HasViewError="{Binding HasViewError, Mode=OneWayToSource}" />
    </i:Interaction.Behaviors>
    
    <Window.Resources>

        <ObjectDataProvider x:Key="IonMode" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="common:IonMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="SpectrumType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="common:DataType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ControlTemplate x:Key="InputErrorTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="ToolTipErrorStyleDataGrid" TargetType="{x:Type DataGrid}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    
    <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="40" />
            <RowDefinition Height="345" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        
        <!--Folder path selection-->
        <Label Content="Folder path:" Grid.Row="0" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
        <TextBox Name="TextBox_FolderPath" 
                 Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                 Text="{Binding Path=FolderPath, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Row="0" Margin="80,0,85,0" Height="30" 
                 VerticalAlignment="Center" HorizontalAlignment="Stretch"
                 VerticalContentAlignment="Center"/>
        <Button Name="Button_FolderBrowse" Content="Browse" 
                Click="Button_FolderBrowse_Click" 
                Grid.Row="0" Margin="5,0,5,0" Width="70" Height="25" VerticalAlignment="Center" HorizontalAlignment="Right" />
        
        <!--File name definition-->
        <Label Content="File name:" Grid.Row="1" Margin="5,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
        <TextBox Name="TextBox_FileName" 
                 Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                 Text="{Binding Path=FileName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                 Grid.Row="1" Margin="80,0,85,0" Height="30" 
                 VerticalAlignment="Center" HorizontalAlignment="Stretch"
                 VerticalContentAlignment="Center"/>
        
        <!--Meta data-->
        <Label Content="Meta data" FontStyle="Italic" Grid.Row="2" Margin="5,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
        <Grid Grid.Row="2" Margin="5,35,0,0">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
        
            <StackPanel Grid.Column="0" Margin="5,0,0,0" Orientation="Vertical">
                <Label Content="Scan number:" Height="30"/>
                <Label Content="Retention time [min]:" Height="30"/>
                <Label Content="Precursor m/z [Da]:" Height="30"/>
                <Label Content="Precursor type:" Height="30"/>
                <Label Content="Ion mode:" Height="30"/>
                <Label Content="Spectrum type:" Height="30"/>
                <Label Content="Collision energy:" Height="30"/>
                <Label Content="Formula:" Height="30"/>
                <Label Content="SMILES:" Height="30"/>
                <Label Content="Intensity:" Height="30"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Margin="5,0,0,0" Orientation="Vertical">
                <TextBox Name="TextBox_ScanNumber" Text="{Binding Path=ScanNumber, Mode=TwoWay}"
                         Height="25" Margin="0,2.5,5,2.5"
                         VerticalContentAlignment="Center"/>
                
                <TextBox Name="TextBox_RetentionTime" 
                         Text="{Binding Path=RetentionTime, StringFormat=0.00, Mode=TwoWay}"
                         VerticalContentAlignment="Center"
                         Height="25" Margin="0,2.5,5,2.5" />

                <TextBox Name="TextBox_PrecursorMz" Style="{StaticResource ResourceKey=ToolTipErrorStyle}"
                         HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                         Height="25" Margin="0,2.5,5,2.5">
                    <TextBox.Text>
                        <Binding Path="PrecursorMz" ValidatesOnDataErrors="True" UpdateSourceTrigger="LostFocus" NotifyOnSourceUpdated="True">
                            <Binding.ValidationRules>
                                <local:PositiveDoubleNumericValidation />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <ToolTipService.ToolTip>
                        
                        <ToolTip>
                            <TextBlock>
                                Enter the precursor m/z.
                                <LineBreak />
                                In the case that 1) you have EI (GC/MS) spectrum and 2) you just want to perform the spectral database search,
                                <LineBreak />
                                Just fill out this box by 0 or whatever.
                            </TextBlock>
                        </ToolTip>

                    </ToolTipService.ToolTip>
                </TextBox>

                <ComboBox Name="TextBox_PrecursorType" ItemsSource="{Binding Path=PrecursorTypeList}" SelectedIndex="{Binding Path=PrecursorTypeId}" Height="25" Margin="0,2.5,5,2.5" />
                <ComboBox Name="ComboBox_IonMode" ItemsSource="{Binding Source={StaticResource IonMode}}" SelectedValue="{Binding Path=IonMode}" Height="25" Margin="0,2.5,5,2.5" />
                <ComboBox Name="ComboBox_SpectrumType" ItemsSource="{Binding Source={StaticResource SpectrumType}}" SelectedValue="{Binding Path=SpectrumType}" Height="25" Margin="0,2.5,5,2.5" />
                <TextBox Name="TextBox_CollisionEnergy" Text="{Binding Path=CollisionEnergy, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }" VerticalContentAlignment="Center" Height="25" Margin="0,2.5,5,2.5" />
                <TextBox Name="TextBox_Formula" Text="{Binding Path=Formula, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }" VerticalContentAlignment="Center" Height="25" Margin="0,2.5,5,2.5" />
                <TextBox Name="TextBox_Smiles" Text="{Binding Path=Smiles, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True }" VerticalContentAlignment="Center" Height="25" Margin="0,2.5,5,2.5" />
                <TextBox Name="TextBox_Intensity" Text="{Binding Path=Intensity, Mode=TwoWay}" Height="25" Margin="0,2.5,5,2.5" />
            </StackPanel>

        </Grid>

        <!--MS1 and MS/MS Spectrum data-->
        <Grid Grid.Row="3">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            
            <!--MS1 spectrum-->
            <Label Grid.Column="0" Content="MS1 spectrum or EI spectrum" FontStyle="Italic" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBox Name="TextBox_MS1Spectrum" Grid.Column="0" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                     Text="{Binding Path=Ms1Spectrum, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" 
                     VerticalScrollBarVisibility="Auto" TextWrapping="WrapWithOverflow" Margin="10,30,5,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                <ToolTipService.ToolTip>

                    <ToolTip>
                        <TextBlock>
                                In the case that you have EI (GC/MS) spectrum,
                                <LineBreak />
                                put your EI spectrum into both left (MS1 spectrum) and right (MS/MS spectrum) textboxes.
                        </TextBlock>
                    </ToolTip>

                </ToolTipService.ToolTip>
                
            </TextBox>

            <!--MS/MS spectrum-->
            <Label Grid.Column="1" Content="MS/MS spectrum or EI spectrum" FontStyle="Italic" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBox Name="TextBox_MsMsSpectrum" Grid.Column="1" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" 
                     Text="{Binding Path=Ms2Spectrum, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                     AcceptsReturn="True" VerticalScrollBarVisibility="Auto" TextWrapping="WrapWithOverflow" Margin="10,30,5,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                <ToolTipService.ToolTip>

                    <ToolTip>
                        <TextBlock>
                                In the case that you have EI (GC/MS) spectrum,
                                <LineBreak />
                                put your EI spectrum into both left (MS1 spectrum) and right (MS/MS spectrum) textboxes.
                        </TextBlock>
                    </ToolTip>

                </ToolTipService.ToolTip>
                
            </TextBox>

        </Grid>
        
        <!--Finish buttons-->
        <Button x:Name="Cancel" Content="Cancel" Click="Click_Cancel" Grid.Row="4" Height="25" Width="70" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,5,5,5" />
        <Button x:Name="Finish" Content="Finish" Command="{Binding OkCommand}" Grid.Row="4" Height="25" Width="70" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,5,80,5" />
    
    </Grid>
</Window>
