<Window x:Class="CompMs.App.Msdial.View.Setting.FragmentQuerySettingView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Setting"
        xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
        xmlns:core="clr-namespace:CompMs.MsdialCore.DataObj;assembly=MsdialCore"
        xmlns:converter="clr-namespace:CompMs.CommonMVVM.Converter;assembly=CommonMVVM"
        d:DataContext="{d:DesignInstance Type={x:Type vm:FragmentQuerySettingViewModel}}"
        mc:Ignorable="d"
        Name="FragmentSetView"
        Title="Fragment search query setting" Height="600" Width="520">
    <Window.Resources>
        <ControlTemplate x:Key="InputErrorTemplate">
            <DockPanel>
                <TextBlock DockPanel.Dock="Right" Text="!" Foreground="Red" FontSize="18" FontWeight="Bold" Margin="5,2"/>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="ToolTipErrorStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToolTipErrorStyleDataGrid" TargetType="{x:Type DataGrid}">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="BorderBrush" Value="Pink" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ObjectDataProvider x:Key="SearchType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="core:PeakFeatureSearchType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <converter:CBoolNegativeConverter x:Key="CBoolNegConverter" />
        <converter:BooleanToEnumConverter x:Key="EnumToBooleanConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid>
                <Label Content="Search viewer: " Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" />
                <RadioButton Content="Peak spots" 
                     Name="RadioButton_PeakSpots" 
                     Grid.Row="0"
                     IsChecked="{Binding Path=IsAlignSpotViewSelected.Value, Converter={StaticResource CBoolNegConverter}}" 
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center" 
                     VerticalContentAlignment="Center" Margin="100,0,0,0" />
                <RadioButton Content="Alignment spots"
                     Name="RadioButton_AlignmentSpots" 
                     Grid.Row="0" 
                     IsChecked="{Binding Path=IsAlignSpotViewSelected.Value}" 
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center" 
                     VerticalContentAlignment="Center" 
                     Margin="195,0,0,0" />
            </Grid>
        </GroupBox>

        <GroupBox Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid>
                <Label Content="Search option: " Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" />
                <RadioButton Content="AND" 
                     Name="RadioButton_AND" 
                     Grid.Row="1"
                     IsChecked="{Binding Path=SearchOption.Value, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=AND}" 
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center" 
                     VerticalContentAlignment="Center" Margin="100,0,0,0" />
                <RadioButton Content="OR"
                     Name="RadioButton_OR" 
                     Grid.Row="1" 
                     IsChecked="{Binding Path=SearchOption.Value, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=OR}" 
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center" 
                     VerticalContentAlignment="Center" 
                     Margin="195,0,0,0" />

                <Button x:Name="Button_Clear" 
                        Content="Clear list" 
                        Command="{Binding ClearList}" 
                        CommandParameter="{Binding ElementName=FragmentSetView}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Center" 
                        Height="25" Width="70"
                        Margin="5,5,5,5" />
            </Grid>
        </GroupBox>

        <DataGrid ClipboardCopyMode="IncludeHeader" x:Name="Datagrid_FragmentSetView" Style="{StaticResource ResourceKey=ToolTipErrorStyleDataGrid}" 
                  ItemsSource="{Binding Path=FragmentQuerySettingValues, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                  behavior:DataGridPasteBehavior.Enable="True"
                  Grid.Row="2" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="True" 
                  AutoGenerateColumns="False" SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                  AllowDrop="True" Margin="20,5,20,5" >

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.Columns>

                <DataGridTemplateColumn SortMemberPath="Mass.Value" Width="1*" 
                                        Header="Exact mass" IsReadOnly="False" ClipboardContentBinding="{Binding Path=Mass.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_ExactMass" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=Mass.Value, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_ExactMass}">
                                <TextBox Name="TextBox_ExactMass" Text="{Binding Mass.Value, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn SortMemberPath="MassTolerance.Value" Width="*" 
                                        Header="Mass tolerance [Da]" IsReadOnly="False" ClipboardContentBinding="{Binding Path=MassTolerance.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_MassTolerance" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=MassTolerance.Value, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_MassTolerance}">
                                <TextBox Name="TextBox_MassTolerance" Text="{Binding MassTolerance.Value, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn SortMemberPath="RelativeIntensityCutoff.Value" Width="*" 
                                        Header="Ion abundance [%]" IsReadOnly="False" ClipboardContentBinding="{Binding Path=RelativeIntensityCutoff.Value}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Name="TextBox_RelativeIntensityCutoff" Style="{StaticResource ResourceKey=ToolTipErrorStyle}" VerticalContentAlignment="Center"
                                     Text="{Binding Path=RelativeIntensityCutoff.Value, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <Grid  FocusManager.FocusedElement="{Binding ElementName=TextBox_RelativeIntensityCutoff}">
                                <TextBox Name="TextBox_RelativeIntensityCutoff" Text="{Binding RelativeIntensityCutoff.Value, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridComboBoxColumn Width="*" Header="Search type" 
                                        ItemsSource="{Binding Source={StaticResource SearchType}}" 
                                        SelectedItemBinding="{Binding Path=PeakFeatureSearchType.Value}"
                                        ClipboardContentBinding="{Binding Path=PeakFeatureSearchType.Value}" />

            </DataGrid.Columns>
        </DataGrid>

        <Button x:Name="Cancel" Content="Cancel"
                Grid.Row="3" Height="25" Width="70" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,5,20,5">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:ChangePropertyAction TargetObject="{Binding ElementName=FragmentSetView}" PropertyName="DialogResult" Value="False"/>
                    <i:CallMethodAction TargetObject="{Binding ElementName=FragmentSetView}" MethodName="Close"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button x:Name="Apply" Content="Apply" 
                Command="{Binding ApplyCommand, Mode=OneTime}"
                Grid.Row="3" Height="25" Width="70" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,5,95,5">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:ChangePropertyAction TargetObject="{Binding ElementName=FragmentSetView}" PropertyName="DialogResult" Value="True"/>
                    <i:CallMethodAction TargetObject="{Binding ElementName=FragmentSetView}" MethodName="Close"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
    </Grid>
</Window>
