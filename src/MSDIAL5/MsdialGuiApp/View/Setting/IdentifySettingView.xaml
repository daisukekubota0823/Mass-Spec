<UserControl x:Class="CompMs.App.Msdial.View.Setting.IdentifySettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:CompMs.Graphics.UI;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Setting"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type={x:Type vm:IdentifySettingViewModel}}"
             d:DesignHeight="600" d:DesignWidth="800">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Button" x:Key="IconButton">
                <Setter Property="Width" Value="24"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Margin" Value="8,4"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Path Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Stretch="Uniform"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListBoxItem" x:Key="ErrorStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=ObserveHasErrors.Value}" Value="true">
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip Content="{Binding Path=(Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="CollectionErrorTemplate">
                <StackPanel>
                    <Border BorderBrush="Red" BorderThickness="1">
                        <AdornedElementPlaceholder x:Name="adornedElem"/>
                    </Border>
                    <ItemsControl ItemsSource="{Binding AdornedElement.(Validation.Errors), ElementName=adornedElem}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Red" Text="{Binding ErrorContent}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ControlTemplate>
            <StreamGeometry x:Key="Plus">M -3,1 H -1 V 3 H 1 V 1 H 3 V -1 H 1 V -3 H -1 V -1 H -3 Z</StreamGeometry>
            <StreamGeometry x:Key="Minus">M -3,1 H 3 V -1 H -3 Z</StreamGeometry>
            <StreamGeometry x:Key="UpArrow">M 1,0 L 0,-1.3 L -1,0 Z</StreamGeometry>
            <StreamGeometry x:Key="DownArrow">M 1,0 L 0,1.3 L -1,0 Z</StreamGeometry>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="4*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Database setting" FontStyle="Italic"
                       Margin="8,4"
                       Grid.Row="0"/>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Command="{Binding Path=AddDataBaseCommand}"
                        Content="{StaticResource Plus}"
                        IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                        Foreground="Green"
                        Style="{StaticResource IconButton}"/>
                <Button Command="{Binding Path=RemoveDataBaseCommand}"
                        Content="{StaticResource Minus}"
                        IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                        Foreground="Red"
                        Style="{StaticResource IconButton}"/>
            </StackPanel>
            <ListBox ItemsSource="{Binding Path=DataBaseViewModels}"
                     Validation.ErrorTemplate="{StaticResource CollectionErrorTemplate}"
                     SelectedValue="{Binding Path=DataBaseViewModel.Value}"
                     DisplayMemberPath="DataBaseID.Value"
                     IsSynchronizedWithCurrentItem="True"
                     ItemContainerStyle="{StaticResource ErrorStyle}"
                     Margin="8,4"
                     Grid.Row="1"/>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Annotation method setting" FontStyle="Italic"
                       Margin="8,4"
                       Grid.Row="0"/>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Command="{Binding Path=AddAnnotatorCommand}"
                        Content="{StaticResource Plus}"
                        IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                        Foreground="Green"
                        Style="{StaticResource IconButton}"/>
                <Button Command="{Binding Path=RemoveAnnotatorCommand}"
                        Content="{StaticResource Minus}"
                        IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                        Foreground="Red"
                        Style="{StaticResource IconButton}"/>
                <Button Command="{Binding Path=MoveUpAnnotatorCommand}"
                        Content="{StaticResource UpArrow}"
                        IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                        Foreground="Black"
                        Style="{StaticResource IconButton}"/>
                <Button Command="{Binding Path=MoveDownAnnotatorCommand}"
                        Content="{StaticResource DownArrow}"
                        IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                        Foreground="Black"
                        Style="{StaticResource IconButton}"/>
            </StackPanel>
            <ListBox ItemsSource="{Binding Path=AnnotatorViewModels}"
                     Validation.ErrorTemplate="{StaticResource CollectionErrorTemplate}"
                     SelectedValue="{Binding Path=AnnotatorViewModel.Value}"
                     DisplayMemberPath="AnnotatorID.Value"
                     IsSynchronizedWithCurrentItem="True"
                     ItemContainerStyle="{StaticResource ErrorStyle}"
                     Margin="8,4"
                     Grid.Row="1"/>
        </Grid>

        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Visible"
                      Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <StackPanel Margin="8">
            <StackPanel.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/Lcms/AnnotationSettingStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/Dims/AnnotationSettingStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/Imms/AnnotationSettingStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/Lcimms/AnnotationSettingStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/Setting/AnnotationSettingStyle.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                    <Style TargetType="ui:LabeledContent" BasedOn="{StaticResource AlignedContent}">
                        <Setter Property="Height" Value="30"/>
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource BasicErrorTemplate}"/>
                    </Style>
                    <Style TargetType="Expander">
                        <Setter Property="IsExpanded" Value="False"/>
                    </Style> 
                </ResourceDictionary>
            </StackPanel.Resources>
                <GroupBox Header="DataBase">
                    <ContentControl Content="{Binding Path=DataBaseViewModel.Value, Mode=OneWay}"
                                    IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"/>
                </GroupBox>
                <GroupBox Header="Annotation method">
                    <ContentControl Content="{Binding Path=AnnotatorViewModel.Value, Mode=OneWay}"
                                    IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"/>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
