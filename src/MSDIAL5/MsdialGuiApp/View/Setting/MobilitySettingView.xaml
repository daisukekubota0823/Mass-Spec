<UserControl x:Class="CompMs.App.Msdial.View.Setting.MobilitySettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behavior="clr-namespace:CompMs.Graphics.Behavior;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Setting"
             mc:Ignorable="d" 
             d:Background="White"
             d:DataContext="{d:DesignInstance Type={x:Type vm:MobilitySettingViewModel}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Margin="5,0" Grid.Row="0">
            <Label Content="Mobility type" FontStyle="Italic"
                   Grid.Row="0"/>

            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="16,0,0,0"/>
                    </Style>
                </StackPanel.Resources>
                <RadioButton Name="RadioButton_UseTIMS" Content="TIMS (Bruker)"
                             IsChecked="{Binding Path=IonMobilityType.Value, Converter={StaticResource EnumToBoolean}, ConverterParameter=Tims}"
                             IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"/>
                <RadioButton Name="RadioButton_UseDTIMS" Content="DTIMS (Agilent)"
                             IsChecked="{Binding Path=IonMobilityType.Value, Converter={StaticResource EnumToBoolean}, ConverterParameter=Dtims}"
                             IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"/>
                <RadioButton Name="RadioButton_UseTWIMS" Content="TWIMS (Waters)"
                             IsChecked="{Binding Path=IonMobilityType.Value, Converter={StaticResource EnumToBoolean}, ConverterParameter=Twims}"
                             IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="8">
                <Label Content="CCS calibration data: ">
                    <ToolTipService.ToolTip>
                        <ToolTip Content="For CCS calculation, calibration information (TFix and Beta for Agilent single field, Coeff, Exponent, and T0 for Waters) can be set from here." />
                    </ToolTipService.ToolTip>
                </Label>

                <Label Name="Label_CcsCalibrantImport">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Content" Value="not imported yet"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAllCalibrantDataImported.Value}" Value="True">
                                    <Setter Property="Content" Value="imported"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StackPanel>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <Style TargetType="TextBlock" x:Key="NumberCell">
                    <Setter Property="TextAlignment" Value="Right"/>
                </Style>
                <Style TargetType="TextBox" x:Key="EditingNumberCell">
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                </Style>
            </Grid.Resources>
            <TextBlock Visibility="{Binding IsTims.Value, Converter={StaticResource ResourceKey=BooleanToVisibility}}"
                       TextWrapping="Wrap"
                       FontSize="16"
                       Foreground="Red"
                       Margin="8">
                Bruker TIMS does not require the calibrant information.
                However, please reflect the calibration data to your raw data in Bruker DataAnalysis software before MS-DIAL analysis.
            </TextBlock>

            <DataGrid ItemsSource="{Binding CalibrationInfoCollection}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      AutoGenerateColumns="False"
                      SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                      CanUserAddRows="False" CanUserDeleteRows="False"
                      CanUserReorderColumns="False" CanUserSortColumns="True"
                      ClipboardCopyMode="IncludeHeader" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      Visibility="{Binding IsDtims.Value, Converter={StaticResource ResourceKey=BooleanToVisibility}}"
                      IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                      behavior:DataGridPasteBehavior.Enable="True"
                      Margin="8">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="File name"
                                        Binding="{Binding Filename}"
                                        IsReadOnly="True"
                                        Width="2*"/>
                    <DataGridTextColumn Header="Beta"
                                        Binding="{Binding AgilentBeta, UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource NumberCell}"
                                        EditingElementStyle="{StaticResource EditingNumberCell}"
                                        Width="*"/>
                    <DataGridTextColumn Header="TFix"
                                        Binding="{Binding AgilentTFix, UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource NumberCell}"
                                        EditingElementStyle="{StaticResource EditingNumberCell}"
                                        Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

            <DataGrid ItemsSource="{Binding CalibrationInfoCollection}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      AutoGenerateColumns="False"
                      SelectionMode="Extended" SelectionUnit="CellOrRowHeader"
                      CanUserAddRows="False" CanUserDeleteRows="False"
                      CanUserReorderColumns="False" CanUserSortColumns="True"
                      ClipboardCopyMode="IncludeHeader" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      IsEnabled="{Binding IsReadOnly, Mode=OneTime, Converter={StaticResource NegativeConverter}}"
                      Visibility="{Binding IsTwims.Value, Converter={StaticResource ResourceKey=BooleanToVisibility}}"
                      behavior:DataGridPasteBehavior.Enable="True"
                      Margin="8">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="File name"
                                        Binding="{Binding Filename}"
                                        IsReadOnly="True"
                                        Width="2*"/>
                    <DataGridTextColumn Header="Coefficient"
                                        Binding="{Binding WatersCoefficient, UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource NumberCell}"
                                        EditingElementStyle="{StaticResource EditingNumberCell}"
                                        Width="*"/>
                    <DataGridTextColumn Header="T0"
                                        Binding="{Binding WatersT0, UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource NumberCell}"
                                        EditingElementStyle="{StaticResource EditingNumberCell}"
                                        Width="*"/>
                    <DataGridTextColumn Header="Exponent"
                                        Binding="{Binding WatersExponent, UpdateSourceTrigger=PropertyChanged}"
                                        ElementStyle="{StaticResource NumberCell}"
                                        EditingElementStyle="{StaticResource EditingNumberCell}"
                                        Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
