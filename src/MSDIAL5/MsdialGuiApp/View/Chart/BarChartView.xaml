<UserControl x:Class="CompMs.App.Msdial.View.Chart.BarChartView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:chart="clr-namespace:CompMs.Graphics.Chart;assembly=ChartDrawing"
             xmlns:vm="clr-namespace:CompMs.App.Msdial.ViewModel.Chart"
             xmlns:converter="clr-namespace:CompMs.Graphics.Converter;assembly=ChartDrawing"
             xmlns:behavior="clr-namespace:CompMs.CommonMVVM.Behaviors;assembly=CommonMVVM"
             xmlns:io="clr-namespace:CompMs.Graphics.IO;assembly=ChartDrawing"
             behavior:ObserveKeyboardFocusBehavior.ObserveAction="{Binding FocusAction, Mode=OneWay}"
             d:DataContext="{d:DesignInstance Type={x:Type vm:BarChartViewModel}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/MainWindowStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Msdial;component/View/ChartStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Change data source to.."
                          ItemsSource="{Binding PlacementTarget.DataContext.BarItemsLoaderDataViewModels, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                          DisplayMemberPath="Label">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding SwitchCommand, Mode=OneTime}"/>
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled.Value, Mode=OneWay}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Save image using dialog"
                          Command="{x:Static io:SaveImageAsWithDialogCommand.Instance}"
                          CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                <MenuItem Header="Save image as...">
                    <MenuItem Header="Save as emf"
                              Command="{x:Static io:SaveImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Save as png"
                              Command="{x:Static io:SaveImageAsCommand.PngInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </MenuItem>
                <MenuItem Header="Copy image using dialog"
                          Command="{x:Static io:CopyImageAsWithDialogCommand.Instance}"
                          CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                <MenuItem Header="Copy image as...">
                    <MenuItem Header="Copy as emf"
                              Command="{x:Static io:CopyImageAsCommand.EmfInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Copy as png"
                              Command="{x:Static io:CopyImageAsCommand.BitmapInstance}"
                              CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <chart:MultiChart HorizontalAxis="{Binding HorizontalAxis}"
                          VerticalAxis="{Binding VerticalAxis}"
                          HorizontalTitle="{Binding HorizontalTitle.Value}">
            <chart:MultiChart.Style>
                <Style TargetType="{x:Type chart:MultiChart}" BasedOn="{StaticResource OverlapChart}">
                    <Setter Property="VerticalTitle">
                        <Setter.Value>
                            <MultiBinding StringFormat="{}{0}({1})">
                                <Binding Path="VerticalTitle.Value"/>
                                <Binding Path="VerticalAxis.UnitLabel"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding VerticalAxis.UnitLabel, TargetNullValue=''}" Value="">
                            <Setter Property="VerticalTitle" Value="{Binding VerticalTitle.Value}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </chart:MultiChart.Style>
            <chart:MultiChart.Resources>
                <converter:MultiplyConverter x:Key="ByHalf" By="0.5"/>
            </chart:MultiChart.Resources>
            <chart:BarControl x:Name="bar"
                              ItemsSource="{Binding BarItems.Value}"
                              HorizontalPropertyName="{Binding HorizontalProperty.Value}"
                              VerticalPropertyName="{Binding VerticalProperty.Value}"
                              BrushMapper="{Binding BrushSource.Value}">
                <chart:BarControl.ToolTip>
                    <ToolTip DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Class: "/>
                            <TextBlock Text="{Binding FocusedItem.Class}"/>
                            <TextBlock Text=" Height: "/>
                            <TextBlock Text="{Binding FocusedItem.Height}"/>
                        </StackPanel>
                    </ToolTip>
                </chart:BarControl.ToolTip>
            </chart:BarControl>
            <chart:ErrorBar ItemsSource="{Binding BarItems.Value}"
                            HorizontalProperty="{Binding HorizontalProperty.Value}"
                            VerticalProperty="{Binding VerticalProperty.Value}"
                            VerticalErrors="{Binding Errors.Value}"
                            ErrorCap="{Binding ActualBarWidth, ElementName=bar, Converter={StaticResource ByHalf}, Mode=OneWay}"
                            ClipToBounds="True"/>
        </chart:MultiChart>
        <StackPanel Visibility="{Binding IsLoading.Value, Converter={StaticResource ResourceKey=BooleanToVisibility}}"
                    VerticalAlignment="Center" MaxWidth="100">
            <TextBlock Text="Loading..."
                       HorizontalAlignment="Center"
                       FontSize="16"/>
            <ProgressBar IsIndeterminate="True"
                         HorizontalAlignment="Center"
                         Height="16" Width="100"/>
        </StackPanel>
    </Grid>
</UserControl>
