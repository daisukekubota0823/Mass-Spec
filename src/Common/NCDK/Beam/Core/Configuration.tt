<#@ include file="..\..\..\Config.ttinclude" #>

/*
 * Copyright (c) 2013, European Bioinformatics Institute (EMBL-EBI)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * Any EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * Any DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON Any THEORY OF LIABILITY, WHETHER IN CONTRACT, Strict LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN Any WAY OUT OF THE USE OF THIS
 * SOFTWARE, Even IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those
 * of the authors and should not be interpreted as representing official policies,
 * either expressed or implied, of the FreeBSD Project.
 */

namespace NCDK.Beam
{
    /// <summary>
    /// Enumeration of atom-based relative configurations. Each value defines a
    /// configuration of a given topology.
    /// </summary>
    /// <seealso href="http://www.opensmiles.org/opensmiles.html#chirality">Chirality, OpenSMILES</seealso>
    // @author John May
#if PUBLIC_BEAM
    public
#else
    internal
#endif
<# 
    GenerateEnumBody(
        "Configuration", 
            new[]
        {
            "Unknown{**ConfigurationType.None, \"\"**}:An atoms has Unknown/no configuration.",
            "AntiClockwise{**ConfigurationType.Implicit, \"@\"**}:Shorthand for TH1, AL1, DB1, TB1 or OH1 configurations.",
            "Clockwise{**ConfigurationType.Implicit, \"@@\"**}:Shorthand for TH2, AL2, DB2, TB2 or OH2 configurations.",
            "TH1{**ConfigurationType.Tetrahedral, \"@TH1\", AntiClockwise**}:Tetrahedral, neighbors proceed anti-clockwise looking from the first atom.",
            "TH2{**ConfigurationType.Tetrahedral, \"@TH2\", Clockwise**}:Tetrahedral, neighbors proceed clockwise looking from the first atom. ",
            "DB1{**ConfigurationType.DoubleBond, \"@DB1\", AntiClockwise**}:Atom-based double bond configuration, neighbors proceed anti-clockwise in a plane. <i>Note - this configuration is currently specific to grins.</i>",
            "DB2{**ConfigurationType.DoubleBond, \"@DB2\", Clockwise**}:Atom-based double bond configuration, neighbors proceed clockwise in a plane.<i>Note - this configuration is currently specific to grins.</i>",

            // extended tetrahedral, allene-like = new Configuration(Sp)
            "AL1{**ConfigurationType.ExtendedTetrahedral, \"@AL1\", AntiClockwise**}",
            "AL2{**ConfigurationType.ExtendedTetrahedral, \"@AL2\", Clockwise**}",

            // square planar
            "SP1{**ConfigurationType.SquarePlanar, \"@SP1\"**}",
            "SP2{**ConfigurationType.SquarePlanar, \"@SP2\"**}",
            "SP3{**ConfigurationType.SquarePlanar, \"@SP3\"**}",

            // trigonal bipyramidal
            "TB1{**ConfigurationType.TrigonalBipyramidal, \"@TB1\", AntiClockwise**}",
            "TB2{**ConfigurationType.TrigonalBipyramidal, \"@TB2\", Clockwise**}",
            "TB3{**ConfigurationType.TrigonalBipyramidal, \"@TB3\"**}",
            "TB4{**ConfigurationType.TrigonalBipyramidal, \"@TB4\"**}",
            "TB5{**ConfigurationType.TrigonalBipyramidal, \"@TB5\"**}",
            "TB6{**ConfigurationType.TrigonalBipyramidal, \"@TB6\"**}",
            "TB7{**ConfigurationType.TrigonalBipyramidal, \"@TB7\"**}",
            "TB8{**ConfigurationType.TrigonalBipyramidal, \"@TB8\"**}",
            "TB9{**ConfigurationType.TrigonalBipyramidal, \"@TB9\"**}",
            "TB10{**ConfigurationType.TrigonalBipyramidal, \"@TB10\"**}",
            "TB11{**ConfigurationType.TrigonalBipyramidal, \"@TB11\"**}",
            "TB12{**ConfigurationType.TrigonalBipyramidal, \"@TB12\"**}",
            "TB13{**ConfigurationType.TrigonalBipyramidal, \"@TB13\"**}",
            "TB14{**ConfigurationType.TrigonalBipyramidal, \"@TB14\"**}",
            "TB15{**ConfigurationType.TrigonalBipyramidal, \"@TB15\"**}",
            "TB16{**ConfigurationType.TrigonalBipyramidal, \"@TB16\"**}",
            "TB17{**ConfigurationType.TrigonalBipyramidal, \"@TB17\"**}",
            "TB18{**ConfigurationType.TrigonalBipyramidal, \"@TB18\"**}",
            "TB19{**ConfigurationType.TrigonalBipyramidal, \"@TB19\"**}",
            "TB20{**ConfigurationType.TrigonalBipyramidal, \"@TB20\"**}",

            // octahedral
            "OH1{**ConfigurationType.Octahedral, \"@OH1\", AntiClockwise**}",
            "OH2{**ConfigurationType.Octahedral, \"@OH2\", Clockwise**}",
            "OH3{**ConfigurationType.Octahedral, \"@OH3\"**}",
            "OH4{**ConfigurationType.Octahedral, \"@OH4\"**}",
            "OH5{**ConfigurationType.Octahedral, \"@OH5\"**}",
            "OH6{**ConfigurationType.Octahedral, \"@OH6\"**}",
            "OH7{**ConfigurationType.Octahedral, \"@OH7\"**}",
            "OH8{**ConfigurationType.Octahedral, \"@OH8\"**}",
            "OH9{**ConfigurationType.Octahedral, \"@OH9\"**}",
            "OH10{**ConfigurationType.Octahedral, \"@OH10\"**}",
            "OH11{**ConfigurationType.Octahedral, \"@OH11\"**}",
            "OH12{**ConfigurationType.Octahedral, \"@OH12\"**}",
            "OH13{**ConfigurationType.Octahedral, \"@OH13\"**}",
            "OH14{**ConfigurationType.Octahedral, \"@OH14\"**}",
            "OH15{**ConfigurationType.Octahedral, \"@OH15\"**}",
            "OH16{**ConfigurationType.Octahedral, \"@OH16\"**}",
            "OH17{**ConfigurationType.Octahedral, \"@OH17\"**}",
            "OH18{**ConfigurationType.Octahedral, \"@OH18\"**}",
            "OH19{**ConfigurationType.Octahedral, \"@OH19\"**}",
            "OH20{**ConfigurationType.Octahedral, \"@OH20\"**}",
            "OH21{**ConfigurationType.Octahedral, \"@OH21\"**}",
            "OH22{**ConfigurationType.Octahedral, \"@OH22\"**}",
            "OH23{**ConfigurationType.Octahedral, \"@OH23\"**}",
            "OH24{**ConfigurationType.Octahedral, \"@OH24\"**}",
            "OH25{**ConfigurationType.Octahedral, \"@OH25\"**}",
            "OH26{**ConfigurationType.Octahedral, \"@OH26\"**}",
            "OH27{**ConfigurationType.Octahedral, \"@OH27\"**}",
            "OH28{**ConfigurationType.Octahedral, \"@OH28\"**}",
            "OH29{**ConfigurationType.Octahedral, \"@OH29\"**}",
            "OH30{**ConfigurationType.Octahedral, \"@OH30\"**}",
        },
        false
    );
#>
        private Configuration(int ordinal, ConfigurationType type, string symbol, Configuration shorthand)
            : this(ordinal)
        {
            this.type = type;
            this.symbol = symbol;
            this.shorthand = shorthand;
        }

        private Configuration(int ordinal, ConfigurationType type, string symbol)
            : this(ordinal)
        {
            this.type = type;
            this.symbol = symbol;
            this.shorthand = this;
        }
<#
    EndGenerateEnumBody();
#>
}
